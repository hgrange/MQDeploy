apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-mqtt-config
  namespace: NAMESPACE
data:
  mqxr_unix.properties: |
    com.ibm.mq.MQXR.channel.MQTT.UserName=nobody
    com.ibm.mq.MQXR.channel.MQTT.Backlog=1000000
    com.ibm.mq.MQXR.channel.MQTT.Port=1883
    com.ibm.mq.MQXR.channel.MQTT.StartWithMQXRService=true
  script.mqsc: | 
    DEF SERVICE(SYSTEM.MQXR.SERVICE) +
    CONTROL(QMGR) +
    DESCR('Manages clients using MQXR protocols such as MQTT') SERVTYPE(SERVER) +
    STARTCMD('+MQ_INSTALL_PATH+/mqxr/bin/runMQXRService.sh') +
    STARTARG('-m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+" -g "+MQ_DATA_PATH+" -sf "[DEFAULT]"') +
    STOPCMD('+MQ_INSTALL_PATH+/mqxr/bin/endMQXRService.sh') +
    STOPARG('-m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+" -g "+MQ_DATA_PATH+"') +
    STDOUT('+MQ_Q_MGR_DATA_PATH+/mqxr.stdout') +
    STDERR('+MQ_Q_MGR_DATA_PATH+/mqxr.stderr')
    
    DEFINE QLOCAL('SYSTEM.MQTT.TRANSMIT.QUEUE') USAGE(XMITQ) MAXDEPTH(100000)
    ALTER QMGR DEFXMITQ('SYSTEM.MQTT.TRANSMIT.QUEUE')
    SET AUTHREC PROFILE(SYSTEM.MQTT.TRANSMIT.QUEUE)  PRINCIPAL('nobody') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)
    SET AUTHREC PROFILE(SYSTEM.BASE.TOPIC) PRINCIPAL('nobody') OBJTYPE(TOPIC) AUTHADD(PUB,SUB)
    START SERVICE(SYSTEM.MQXR.SERVICE)

    DEFINE TOPIC(MQTT) TOPICSTR('#')  PUB(ENABLED) SUB(ENABLED)
    SET AUTHREC PROFILE(MQTT) PRINCIPAL('nobody') OBJTYPE(TOPIC) AUTHADD(PUB,SUB)
    DEF QL(TO.KAFKA)
    DEFINE SUB(TO.KAFKA) DEST(TO.KAFKA) TOPICOBJ(MQTT) LIKE(SYSTEM.DEFAULT.SUB)
    
    DEFINE CHANNEL (APP1.CHAN) CHLTYPE (SVRCONN) TRPTYPE (TCP) SSLCAUTH(REQUIRED)  SSLCIPH('ANY_TLS13_OR_HIGHER') REPLACE
    SET CHLAUTH('APP1.CHAN') TYPE(SSLPEERMAP) SSLPEER('CN=*') USERSRC(NOACCESS) ACTION(REPLACE)
    SET CHLAUTH('APP1.CHAN') TYPE(SSLPEERMAP) SSLPEER('CN=app1') USERSRC(MAP) MCAUSER('nobody') ACTION(REPLACE)
    SET CHLAUTH('APP1.CHAN') TYPE(SSLPEERMAP) SSLPEER('CN=MQTT') USERSRC(MAP) MCAUSER('nobody') ACTION(REPLACE)
    
    DEFINE CHANNEL (KAFKA.SVRCONN) CHLTYPE (SVRCONN) TRPTYPE (TCP) SSLCAUTH(OPTIONAL) MCAUSER('nobody')  REPLACE

    DEFINE CHANNEL (SYSTEMMQTTCHL) CHLTYPE (SVRCONN) TRPTYPE (TCP) SSLCAUTH(REQUIRED)  SSLCIPH('ANY_TLS13_OR_HIGHER') REPLACE
    SET CHLAUTH('SYSTEMMQTTCHL') TYPE(SSLPEERMAP) SSLPEER('CN=*') USERSRC(NOACCESS) ACTION(REPLACE)
    SET CHLAUTH('SYSTEMMQTTCHL') TYPE(SSLPEERMAP) SSLPEER('CN=mqm') USERSRC(MAP) MCAUSER('nobody') ACTION(REPLACE)

    DEF QL(Q1)
    DEF QL(Q2)
    DEF QL(FROM.KAFKA)

    SET AUTHREC PRINCIPAL('nobody') OBJTYPE(QMGR) AUTHADD(CONNECT,INQ)
    SET AUTHREC PROFILE(Q1) PRINCIPAL('nobody') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)
    SET AUTHREC PROFILE(Q2) PRINCIPAL('nobody') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)
    SET AUTHREC PROFILE(TO.KAFKA) PRINCIPAL('nobody') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)
    SET AUTHREC PROFILE(FROM.KAFKA) PRINCIPAL('nobody') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)
    
    SET AUTHREC PRINCIPAL('nobody') OBJTYPE(QMGR) AUTHADD(CONNECT,INQ)
    SET AUTHREC PROFILE(TO.KAFKA) PRINCIPAL('nobody') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)
    SET AUTHREC PROFILE(FROM.KAFKA) PRINCIPAL('nobody') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)
    REFRESH SECURITY
  qm-service-component.ini: |   
    ServiceComponent:
     Service=AuthorizationService
     Name=Dev.HtpAuth.Service
     Module=/opt/mqm/lib64/mqsimpleauth.so
     ComponentDataSize=0
    ServiceComponent:
     Service=AuthorizationService
     Name=MQSeries.UNIX.auth.service
     Module=amqzfu
     ComponentDataSize=0
     
  20-dev-tls.mqsc: |
  
  10-dev.mqsc: |
       * Developer connection authentication
    DEFINE AUTHINFO('DEV.AUTHINFO') AUTHTYPE(IDPWOS) CHCKCLNT(REQDADM) CHCKLOCL(OPTIONAL) ADOPTCTX(YES) REPLACE
    ALTER QMGR CONNAUTH('DEV.AUTHINFO')
    REFRESH SECURITY(*) TYPE(CONNAUTH)
    
  tls.ini: |
    Service:
        Name=AuthorizationService
        EntryPoints=14
        SecurityPolicy=UserExternal
    SSL:
        AllowTLSV13=TRUE
        OutboundSNI=HOSTNAME
        ClientRevocationChecks=DISABLED
        OCSPAuthentication=OPTIONAL
        OCSPCheckExtensions=NO
    
   
    
