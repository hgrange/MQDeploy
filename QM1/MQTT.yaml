apiVersion: v1
kind: ConfigMap
metadata:
  name: qm1-mqtt-config
  namespace: NAMESPACE
data:
  script.mqsc: | 
    DEF SERVICE(SYSTEM.MQXR.SERVICE) +
    CONTROL(QMGR) +
    DESCR('Manages clients using MQXR protocols such as MQTT') SERVTYPE(SERVER) +
    STARTCMD('+MQ_INSTALL_PATH+/mqxr/bin/runMQXRService.sh') +
    STARTARG('-m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+" -g "+MQ_DATA_PATH+" -sf "[DEFAULT]"') +
    STOPCMD('+MQ_INSTALL_PATH+/mqxr/bin/endMQXRService.sh') +
    STOPARG('-m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+" -g "+MQ_DATA_PATH+"') +
    STDOUT('+MQ_Q_MGR_DATA_PATH+/mqxr.stdout') +
    STDERR('+MQ_Q_MGR_DATA_PATH+/mqxr.stderr')
    
    DEFINE QLOCAL('SYSTEM.MQTT.TRANSMIT.QUEUE') USAGE(XMITQ) MAXDEPTH(100000)
    ALTER QMGR DEFXMITQ('SYSTEM.MQTT.TRANSMIT.QUEUE')
    SET AUTHREC PROFILE(SYSTEM.MQTT.TRANSMIT.QUEUE)  PRINCIPAL('mqtt') OBJTYPE(QUEUE) AUTHADD(PUT,GET,INQ,BROWSE)

    DEFINE CHANNEL('MQTT') CHLTYPE(MQTT) PORT(1833) MCAUSER('mqtt')

    DEFINE TOPIC(MQTT) TOPICSTR('#')  PUB(ENABLED) SUB(ENABLED)
    SET AUTHREC PROFILE(MQTT) PRINCIPAL('mqtt') OBJTYPE(TOPIC) AUTHADD(PUB,SUB)
    DEFINE SUB(TO.KAFKA) DEST(TO.KAFKA) TOPICOBJ(MQTT) LIKE(SYSTEM.DEFAULT.SUB)

    REFRESH SECURITY
    
    START SERVICE(SYSTEM.MQXR.SERVICE)
    START CHANNEL('MQTT')
    
